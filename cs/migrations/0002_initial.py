# Generated by Django 4.2.7 on 2024-03-30 09:18

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
        ('cs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='position_CS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(max_length=55, verbose_name='позиция')),
                ('image_position', models.ImageField(blank=True, null=True, upload_to='position_CS/', verbose_name='картинка позиции')),
            ],
            options={
                'verbose_name': 'позиция',
                'verbose_name_plural': 'позиции',
            },
        ),
        migrations.CreateModel(
            name='rank_CS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_name', models.CharField(max_length=55, verbose_name='ранг')),
                ('image_rank', models.ImageField(blank=True, null=True, upload_to='rank_CS/', verbose_name='картинка ранга')),
            ],
            options={
                'verbose_name': 'ранг',
                'verbose_name_plural': 'ранги',
            },
        ),
        migrations.CreateModel(
            name='solo_cup_CS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='cup_solo/cs/', verbose_name='лого кубка')),
            ],
            options={
                'verbose_name': 'кубок_соло',
                'verbose_name_plural': 'кубки_соло',
            },
        ),
        migrations.CreateModel(
            name='team_CS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(default='clown`s', max_length=30, unique=True, verbose_name='название команды')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='team_CS/logo/', verbose_name='лого команды')),
                ('background', models.ImageField(blank=True, null=True, upload_to='team_CS/background/', verbose_name='фон')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='статус')),
                ('detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='подробно')),
                ('date_crate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('matches', models.IntegerField(default=0, verbose_name='кол-во матчей')),
                ('win_matches', models.IntegerField(default=0, verbose_name='кол-во побед матчи')),
                ('tournament', models.IntegerField(default=0, verbose_name='кол-во турниров')),
                ('win_tournament', models.IntegerField(default=0, verbose_name='кол-во побед турнир')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='признанный игрок')),
                ('color', colorfield.fields.ColorField(default='#3749FF', image_field=None, max_length=25, samples=None, verbose_name='цвет')),
                ('cups', models.ManyToManyField(blank=True, to='cs.cup_cs', verbose_name='кубки команды')),
                ('director', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'команда',
                'verbose_name_plural': 'команды',
            },
        ),
        migrations.CreateModel(
            name='tournament_CS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='название турнира')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('price_tournament', models.IntegerField(blank=True, null=True, verbose_name='призовой фонд')),
                ('date', models.DateField(blank=True, null=True, verbose_name='датa')),
                ('is_on', models.BooleanField(default=False, verbose_name='открыт')),
                ('teams', models.ManyToManyField(blank=True, related_name='team_DOTA_playy', to='cs.team_cs', verbose_name='команды-участники')),
                ('win_tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_DOTA_wine21_tournament', to='cs.team_cs')),
            ],
            options={
                'verbose_name': 'турнир',
                'verbose_name_plural': 'турниры',
            },
        ),
        migrations.CreateModel(
            name='player_CS',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='имя')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('matches', models.IntegerField(default=0, verbose_name='кол-во матчей')),
                ('win_matches', models.IntegerField(default=0, verbose_name='кол-во побед матчи')),
                ('tournament', models.IntegerField(default=0, verbose_name='кол-во турниров')),
                ('win_tournament', models.IntegerField(default=0, verbose_name='кол-во побед турнир')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='признанный игрок')),
                ('matches_in_offers', models.IntegerField(default=0, verbose_name='кол-во матчей в контракте')),
                ('pts', models.IntegerField(default=0, verbose_name='птс')),
                ('nickname', models.CharField(blank=True, max_length=55, null=True, verbose_name='никнейм_CS')),
                ('cups', models.ManyToManyField(blank=True, to='cs.solo_cup_cs', verbose_name='кубки команды')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cs.generation_cs')),
                ('position', models.ManyToManyField(blank=True, to='cs.position_cs')),
                ('rank', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='cs.rank_cs')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cs.team_cs')),
            ],
            options={
                'verbose_name': 'игрок',
                'verbose_name_plural': 'игроки',
            },
        ),
        migrations.AddField(
            model_name='offers_cs',
            name='generation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cs.generation_cs'),
        ),
        migrations.AddField(
            model_name='offers_cs',
            name='position',
            field=models.ManyToManyField(blank=True, to='cs.position_cs'),
        ),
        migrations.AddField(
            model_name='offers_cs',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='offers_cs',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meeting_cs',
            name='team_one',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_123DOTA_one', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='meeting_cs',
            name='team_two',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_DOTA123w_two', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='meeting_cs',
            name='teams_structure_one',
            field=models.ManyToManyField(blank=True, related_name='team_DOTA_play_srtucture_1_DOTA', to='cs.player_cs', verbose_name='состав команды 1'),
        ),
        migrations.AddField(
            model_name='meeting_cs',
            name='teams_structure_two',
            field=models.ManyToManyField(blank=True, related_name='team_DOTA_play_srtucture_2_DOTA', to='cs.player_cs', verbose_name='состав команды 2'),
        ),
        migrations.AddField(
            model_name='meeting_cs',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cs.tournament_cs'),
        ),
        migrations.AddField(
            model_name='meeting_cs',
            name='win_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_DOTA_wi12esn', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='match_cs',
            name='meeting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cs.meeting_cs'),
        ),
        migrations.AddField(
            model_name='match_cs',
            name='team_one',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teame121e_DOTA_one', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='match_cs',
            name='team_two',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teamqee12s_DOTA_two', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='match_cs',
            name='win_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_w1sDOTe12qA_win', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='application_cs_tournament',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='directds12wswor_zxcc', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application_cs_tournament',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teqwdws12sam_zxcc', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='application_cs_tournament',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fsdeawqw12sedfsa', to='cs.tournament_cs'),
        ),
        migrations.AddField(
            model_name='application_cs_meeting',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direct2313weor_z1xcc', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application_cs_meeting',
            name='team_one',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team123we_z4xcc', to='cs.team_cs'),
        ),
        migrations.AddField(
            model_name='application_cs_meeting',
            name='team_two',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_e12w3ztwo', to='cs.team_cs'),
        ),
    ]

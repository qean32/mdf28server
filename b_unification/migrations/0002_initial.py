# Generated by Django 4.2.7 on 2024-05-16 06:00

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('generation', '0001_initial'),
        ('b_unification', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('direction', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='позиция')),
                ('image', models.ImageField(blank=True, default='/team/logo/default.jpg', null=True, upload_to='team/logo/', verbose_name='лого команды')),
            ],
            options={
                'verbose_name': 'позиция',
                'verbose_name_plural': 'позиции',
            },
        ),
        migrations.CreateModel(
            name='rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='ранг')),
                ('image', models.ImageField(blank=True, null=True, upload_to='rank/', verbose_name='картинка ранга')),
            ],
            options={
                'verbose_name': 'ранг',
                'verbose_name_plural': 'ранги',
            },
        ),
        migrations.CreateModel(
            name='team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='clown`s', max_length=30, unique=True, verbose_name='название команды')),
                ('logo', models.ImageField(blank=True, default='/team/logo/default.jpg', null=True, upload_to='team/logo/', verbose_name='лого команды')),
                ('background', models.ImageField(blank=True, default='/team/background/default.jpg', null=True, upload_to='team/background/', verbose_name='фон')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='статус')),
                ('detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='подробно')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата создания')),
                ('matches', models.IntegerField(default=0, verbose_name='кол-во матчей')),
                ('win_matches', models.IntegerField(default=0, verbose_name='кол-во побед матчи')),
                ('tournament', models.IntegerField(default=0, verbose_name='кол-во турниров')),
                ('win_tournament', models.IntegerField(default=0, verbose_name='кол-во побед турнир')),
                ('color', colorfield.fields.ColorField(default='#3749FF', image_field=None, max_length=25, samples=None, verbose_name='цвет')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='признанный игрок')),
                ('kill', models.IntegerField(default=0, verbose_name='убийства')),
                ('death', models.IntegerField(default=0, verbose_name='смерти')),
                ('assist', models.IntegerField(default=0, verbose_name='ассисты')),
                ('cups', models.ManyToManyField(blank=True, to='b_unification.cup', verbose_name='кубки команды')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ection21_12', to='direction.direction')),
                ('director', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'команда',
                'verbose_name_plural': 'команды',
            },
        ),
        migrations.CreateModel(
            name='tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='название')),
                ('about', models.CharField(blank=True, max_length=255, null=True, verbose_name='описание')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('date', models.DateField(blank=True, null=True, verbose_name='датa')),
                ('is_on', models.BooleanField(default=False, verbose_name='закрыт')),
                ('price_tournament', models.IntegerField(blank=True, null=True, verbose_name='призовой фонд')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ec123tion21_1fsg2', to='direction.direction')),
                ('teams', models.ManyToManyField(blank=True, related_name='team_DOTA_play', to='b_unification.team', verbose_name='команды-участники')),
                ('win_tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_DOTA_w12in_tournament', to='b_unification.team')),
            ],
            options={
                'verbose_name': 'турнир',
                'verbose_name_plural': 'турниры',
            },
        ),
        migrations.CreateModel(
            name='player_DOTA',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_1235', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='имя')),
                ('matches', models.IntegerField(default=0, verbose_name='кол-во матчей')),
                ('win_matches', models.IntegerField(default=0, verbose_name='кол-во побед матчи')),
                ('tournament', models.IntegerField(default=0, verbose_name='кол-во турниров')),
                ('win_tournament', models.IntegerField(default=0, verbose_name='кол-во побед турнир')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='признанный игрок')),
                ('matches_in_offers', models.IntegerField(default=0, verbose_name='кол-во матчей в контракте')),
                ('mmr', models.IntegerField(default=0, verbose_name='mmr')),
                ('cups', models.ManyToManyField(blank=True, to='b_unification.cup', verbose_name='кубки команды')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tea123m_ztwe12o', to='generation.generation')),
                ('position', models.ManyToManyField(blank=True, to='b_unification.position')),
                ('rank', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='b_unification.rank')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='b_unification.team')),
            ],
            options={
                'verbose_name': 'игрок DOTA',
                'verbose_name_plural': 'игроки DOTA',
            },
        ),
        migrations.CreateModel(
            name='player_CS',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_123', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='имя')),
                ('matches', models.IntegerField(default=0, verbose_name='кол-во матчей')),
                ('win_matches', models.IntegerField(default=0, verbose_name='кол-во побед матчи')),
                ('tournament', models.IntegerField(default=0, verbose_name='кол-во турниров')),
                ('win_tournament', models.IntegerField(default=0, verbose_name='кол-во побед турнир')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='признанный игрок')),
                ('matches_in_offers', models.IntegerField(default=0, verbose_name='кол-во матчей в контракте')),
                ('mmr', models.IntegerField(default=0, verbose_name='mmr')),
                ('cups', models.ManyToManyField(blank=True, to='b_unification.cup', verbose_name='кубки команды')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tea123m_ztwo123ew1q2', to='generation.generation')),
                ('position', models.ManyToManyField(blank=True, to='b_unification.position')),
                ('rank', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='b_unification.rank')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='b_unification.team')),
            ],
            options={
                'verbose_name': 'игрок CS',
                'verbose_name_plural': 'игроки CS',
            },
        ),
        migrations.CreateModel(
            name='player_BASCKETBALL',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_1234', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='имя')),
                ('matches', models.IntegerField(default=0, verbose_name='кол-во матчей')),
                ('win_matches', models.IntegerField(default=0, verbose_name='кол-во побед матчи')),
                ('tournament', models.IntegerField(default=0, verbose_name='кол-во турниров')),
                ('win_tournament', models.IntegerField(default=0, verbose_name='кол-во побед турнир')),
                ('is_recognized', models.BooleanField(default=False, verbose_name='признанный игрок')),
                ('matches_in_offers', models.IntegerField(default=0, verbose_name='кол-во матчей в контракте')),
                ('number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(0)], verbose_name='номер')),
                ('cups', models.ManyToManyField(blank=True, to='b_unification.cup', verbose_name='кубки команды')),
                ('generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tea123m_ztw123eo', to='generation.generation')),
                ('position', models.ManyToManyField(blank=True, to='b_unification.position')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='b_unification.team')),
            ],
            options={
                'verbose_name': 'игрок BASCKETBALL',
                'verbose_name_plural': 'игроки BASCKETBALL',
            },
        ),
        migrations.AddField(
            model_name='offers',
            name='direction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ecti1on_12', to='direction.direction'),
        ),
        migrations.AddField(
            model_name='offers',
            name='generation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='generation.generation'),
        ),
        migrations.AddField(
            model_name='offers',
            name='position',
            field=models.ManyToManyField(blank=True, to='b_unification.position'),
        ),
        migrations.AddField(
            model_name='offers',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='offers',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meeting',
            name='direction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ec123tion21_12', to='direction.direction'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='team_one',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_meeting_one', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='team_two',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_meeting_two', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='b_unification.tournament'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='win_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_meeting_win', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='direction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ec12123tion21_12', to='direction.direction'),
        ),
        migrations.AddField(
            model_name='match',
            name='meeting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='b_unification.meeting'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_one',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_match_one', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_two',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_match_two', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='win_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_match_win', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='application_tournament',
            name='direction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ec123dastion21_12', to='direction.direction'),
        ),
        migrations.AddField(
            model_name='application_tournament',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_applicat412ion_tournament', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='application_tournament',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_a123pplication_tournament', to='b_unification.tournament'),
        ),
        migrations.AddField(
            model_name='application_meeting',
            name='direction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir124ec123tion21_wqsemasd12', to='direction.direction'),
        ),
        migrations.AddField(
            model_name='application_meeting',
            name='team_one',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_142z4xcc', to='b_unification.team'),
        ),
        migrations.AddField(
            model_name='application_meeting',
            name='team_two',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tea123m_ztwo', to='b_unification.team'),
        ),
    ]
